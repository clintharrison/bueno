"""the kindle monorepo"""

module(name = "bueno")

bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "bazel_skylib", version = "1.8.1")
bazel_dep(name = "rules_cc", version = "0.2.8")
bazel_dep(name = "gcc_toolchain", version = "0.9.0")
bazel_dep(name = "rules_go", version = "0.57.0", repo_name = "io_bazel_rules_go")
bazel_dep(name = "gazelle", version = "0.45.0")

go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")
go_sdk.from_file(go_mod = "//:go.mod")
go_sdk.nogo(nogo = "//:nogo")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "co_honnef_go_tools",
    "com_github_godbus_dbus_v5",
    "com_github_google_uuid",
    "com_github_holoplot_go_evdev",
    "com_github_lmittmann_tint",
    "com_github_nishanths_exhaustive",
    "com_github_pilebones_go_udev",
    "com_github_sluongng_nogo_analyzer_staticcheck",
    "in_gopkg_yaml_v3",
    "org_golang_x_tools",
)

git_override(
    module_name = "gcc_toolchain",
    commit = "60704890808323e0d44c199ad6bf56b6509ded46",
    remote = "https://github.com/clintharrison/gcc-toolchain",
)

gcc_toolchains = use_extension("@gcc_toolchain//toolchain:module_extensions.bzl", "gcc_toolchains", dev_dependency = True)
gcc_toolchains.toolchain(
    name = "gcc_toolchain_kindlehf",
    binary_prefix = "arm-kindlehf-linux-gnueabihf-",
    enable_fortran = False,
    gcc_version = "14.2.0",
    # No json.encode() in a MODULE.bazel file :/
    gcc_versions = '''\
    {
        "14.2.0": {
            "armv7": {
                "url": "https://github.com/Sighery/kindle-sdk/releases/download/build-20250905/scribe1-5.17.3.tar.gz",
                "sha256": "faefc807c9fc422019912a3153f3d1f1cc24bff7820bf0732eb8c6304038565d",
                "strip_prefix": "x-tools/arm-kindlehf-linux-gnueabihf/"
            }
        }
    }''',
    include_prefix = "arm-kindlehf-linux-gnueabihf/",
    symlink_sysroot_path = "arm-kindlehf-linux-gnueabihf/sysroot",
    target_arch = "armv7",
)
use_repo(gcc_toolchains, "gcc_toolchain_kindlehf")

register_toolchains(
    "@gcc_toolchain_kindlehf//:cc_toolchain",
    dev_dependency = True,
)

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "ace",
    build_file = "//third_party:ace.BUILD.bazel",
    integrity = "sha256-xRVX4w+JVfnE7Xr1LUBm+blT9LeSQHgwrZDXx8rg+4c=",
    patch_cmds = [
        # Code expects to include "ace/xyz.h" but we just have "xyz.h".
        # I think this is just a quirk from Marek's repo?
        """
        mkdir -p ace
        mv *.h ace/
        """,
    ],
    strip_prefix = "ace_headers-017b324e68dd236f85d73d14d273380d3424a016",
    url = "https://github.com/clintharrison/ace_headers/archive/017b324e68dd236f85d73d14d273380d3424a016.tar.gz",
)

# There are some convenience rules in this repo for staticcheck analyzers with nogo,
# but it doesn't use bzlmod and all its Go deps are brought in manually through tools/nogo/deps.go.
# https://github.com/sluongng/nogo-analyzer/issues/40
http_archive(
    name = "com_github_sluongng_nogo_analyzer",
    integrity = "sha256-nNQ+uI9zwFRR+urifUx3NsOW+k4d+2rqqWSeod9UNuo=",
    strip_prefix = "nogo-analyzer-fc5266f408ed9956e560cce4b988fdbb9b887200",
    url = "https://github.com/sluongng/nogo-analyzer/archive/fc5266f408ed9956e560cce4b988fdbb9b887200.tar.gz",
)
